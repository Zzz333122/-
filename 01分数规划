     vc<pdd> a(n + 1);
        db l = 0;
        db r = 0;
        for (int i = 1; i <= n; i++)
        {
            cin >> a[i].x;
            r += a[i].x;
        }
        for (int i = 1; i <= n; i++)
        {
            cin >> a[i].y;
        }
        k = n - k;
        db ans = 0;

        auto check = [&](db x)
        {
            priority_queue<db> qq; // 大根

            for (int i = 1; i <= n; i++)
            {
                db t = a[i].x - x * a[i].y;
                qq.push(t);
            }
            db ans = 0;
            int tt = k;
            while (tt--) // 找前k个大的数字相加 判断是否大于0
            {
                ans += qq.top();
                qq.pop();
            }
            return ans >= 0;
        };

        while (r - l > eps)
        {
            db mid = (r + l) / 2;
            if (check(mid))
            {
                ans = mid;
                l = mid;
            }
            else
                r = mid;
        }
        cout << (int)(100 * (ans + 0.005)) << endl; // + 0.005 保证四舍五入
